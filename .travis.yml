sudo: false
language: python
python:
  - "2.7"
  - "3.4"
#  - "3.3"
env: #split tests
  global:
    - REQUIRES_PYNBODY=false
    - REQUIRES_ASTROPY=false
  matrix:
    - NOSE_IGNORE_FILES='test_qdf|test_pv2qdf|test_diskdf|test_orbit|test_streamdf|test_streamgapdf|test_evolveddiskdf|test_quantity|test_nemo|test_coords' REQUIRES_PYNBODY=true
    - NOSE_IGNORE_FILES='^((?!test_quantity|test_coords).)*$' REQUIRES_ASTROPY=true # needs to be separate for different config
    - NOSE_IGNORE_FILES='^((?!test_orbit).)*$' REQUIRES_PYNBODY=true REQUIRES_ASTROPY=true
    - NOSE_IGNORE_FILES='^((?!test_evolveddiskdf).)*$'
    - NOSE_IGNORE_FILES='^((?!test_diskdf).)*$'
    - NOSE_IGNORE_FILES='^((?!(test_qdf|test_pv2qdf|test_streamgapdf)).)*$'
    - NOSE_IGNORE_FILES='^((?!test_streamdf).)*$'
addons:
  apt:
    packages:
    - libgsl0-dev
#    - lcov # leave for when they approve its use
before_install:
 # Install lcov
 - wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz
 - tar xf lcov_1.11.orig.tar.gz
 - mkdir $HOME/usr
 - export PATH=$PATH:$HOME/usr/bin
 - make -C lcov-1.11/ install PREFIX=$HOME
 #Setup conda for faster installs
 - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
 - bash miniconda.sh -b -p $HOME/miniconda
 - export PATH="$HOME/miniconda/bin:$PATH"
 - hash -r
 - conda config --set always_yes yes --set changeps1 no
 - conda update -q conda
 - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION numpy scipy=0.17.0 matplotlib setuptools pip cython>=0.20 nose==1.3.4 pyqt=4.11.4
 - source activate test-environment
 - export DISPLAY=:99.0 #For plotting tests, courtesy Ryan Varley
 - sh -e /etc/init.d/xvfb start $For plotting tests
#Download corrections for some tests
 - curl -O https://cloud.github.com/downloads/jobovy/galpy/galpy-dfcorrections.tar.gz
 - tar xvzf galpy-dfcorrections.tar.gz -C ./galpy/df_src/data/
# command to install dependencies
install:
 - pip install 'coverage==4.1' --force-reinstall # necessary bc of backward incompatible change in 4.2 about combining reports
 - pip install nose-cov
 - pip install coveralls-merge
 - gem install coveralls-lcov
 - easy_install --upgrade requests
 - easy_install --upgrade coveralls
 - if $REQUIRES_PYNBODY; then pip install git+git://github.com/pynbody/pynbody.git; fi
 # clone my version of the torus code, don't do this for one test, to make sure the code installs without the torus code
 - if [[ $NOSE_IGNORE_FILES != '^((?!test_evolveddiskdf).)*$' ]]; then git clone https://github.com/jobovy/Torus.git galpy/actionAngle_src/actionAngleTorus_c_ext/torus; fi
 - if [[ $NOSE_IGNORE_FILES != '^((?!test_evolveddiskdf).)*$' ]]; then cd galpy/actionAngle_src/actionAngleTorus_c_ext/torus; fi
 - if [[ $NOSE_IGNORE_FILES != '^((?!test_evolveddiskdf).)*$' ]]; then git checkout galpy; fi
 - if [[ $NOSE_IGNORE_FILES != '^((?!test_evolveddiskdf).)*$' ]]; then cd -; fi
 - if $REQUIRES_ASTROPY; then pip install astropy; fi
 - python setup.py build_ext --coverage --single_ext --inplace
 - python setup.py develop --single_ext
script:
# only wait longer for orbit integrations
 - if [[ $NOSE_IGNORE_FILES == '^((?!test_orbit).)*$' ]]; then travis_wait 30 nosetests -v -w nose/ --with-cov --cov galpy --cov-config .coveragerc_travis; else nosetests -v -w nose/ --with-cov --cov galpy --cov-config .coveragerc_travis; fi
after_success:
 # Generate lcov output 
 - lcov --capture --base-directory . --directory build/temp.linux-x86_64-2.7/galpy/ --no-external --output-file coverage_full.info
 - lcov --remove coverage_full.info 'galpy/actionAngle_src/actionAngleTorus_c_ext/torus/*' -o coverage.info
 # Codecov
 - if [[ $TRAVIS_PYTHON_VERSION == '2.7' ]]; then bash <(curl -s https://codecov.io/bash) -v; fi
 # coveralls: combine, generate json, and upload
 - coveralls-lcov -v -n coverage.info > coverage.c.json
 - if [[ $TRAVIS_PYTHON_VERSION == '2.7' ]]; then coveralls-merge coverage.c.json; fi
notifications:
  email:
    recipients:
      - jo.bovy@gmail.com
    on_success: change
    on_failure: change
